{"ast":null,"code":"var _jsxFileName = \"/home/leonardo/Documentos/redux teste/exercise-forms-redux/src/pages/ProfessionalForm.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from '../components/Input';\nimport TextArea from '../components/TextArea';\nimport Button from '../components/Button';\nimport { setCargo, setCurriculo, setDescricao } from '../redux/actions/professionalAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfessionalForm extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = () => {\n      const {\n        curriculo,\n        cargo,\n        descricao\n      } = this.state;\n      const {\n        setUserCurriculo,\n        setUserCargo,\n        setUserDescricao\n      } = this.props;\n      setUserCurriculo(curriculo);\n      setUserCargo(cargo);\n      setUserDescricao;\n    };\n\n    this.state = {\n      curriculo: '',\n      cargo: '',\n      descricao: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const {\n      curriculo,\n      cargo,\n      descricao\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(TextArea, {\n        label: \"Resumo do curr\\xEDculo: \",\n        value: curriculo,\n        name: \"curriculo\",\n        maxLength: \"1000\",\n        onChange: this.handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Cargo:\",\n        name: \"cargo\",\n        type: \"text\",\n        value: cargo,\n        onChange: this.handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n        label: \"Descri\\xE7\\xE3o do cargo: \",\n        name: \"descricao\",\n        maxLength: \"500\",\n        onChange: this.handleChange,\n        value: descricao,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"enviar\",\n        onClick: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispach => ({\n  setUserCurriculo: curriculo => dispach(setCurriculo(curriculo)),\n  setUserCargo: cargo => dispach(setCargo(cargo)),\n  setUserDescricao: descricao => dispach(setDescricao(descricao))\n});\n\nPersonalForm.propTypes = {\n  setUserCurriculo: PropTypes.func.isRequired,\n  setUserCargo: PropTypes.func.isRequired,\n  setUserDescricao: PropTypes.func.isRequired,\n  history: PropTypes.objectOf.isRequired\n};\nexport default connect(null, mapDispatchToProps)(ProfessionalForm);","map":{"version":3,"sources":["/home/leonardo/Documentos/redux teste/exercise-forms-redux/src/pages/ProfessionalForm.jsx"],"names":["React","Component","PropTypes","Input","TextArea","Button","setCargo","setCurriculo","setDescricao","ProfessionalForm","constructor","handleSubmit","curriculo","cargo","descricao","state","setUserCurriculo","setUserCargo","setUserDescricao","props","handleChange","bind","target","name","value","setState","render","mapDispatchToProps","dispach","PersonalForm","propTypes","func","isRequired","history","objectOf","connect"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport Input from '../components/Input';\nimport TextArea from '../components/TextArea';\nimport Button from '../components/Button';\nimport { setCargo,\n  setCurriculo, setDescricao } from '../redux/actions/professionalAction';\n\nclass ProfessionalForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      curriculo: '',\n      cargo: '',\n      descricao: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit = () => {\n    const { curriculo, cargo, descricao } = this.state;\n    const { setUserCurriculo, setUserCargo, setUserDescricao } = this.props;\n\n    setUserCurriculo(curriculo);\n    setUserCargo(cargo);\n    setUserDescricao\n  }\n\n  render() {\n    const { curriculo, cargo, descricao } = this.state;\n    return (\n      <fieldset>\n        <TextArea\n          label=\"Resumo do currículo: \"\n          value={ curriculo }\n          name=\"curriculo\"\n          maxLength=\"1000\"\n          onChange={ this.handleChange }\n          required\n        />\n        <Input\n          label=\"Cargo:\"\n          name=\"cargo\"\n          type=\"text\"\n          value={ cargo }\n          onChange={ this.handleChange }\n          required\n        />\n        <TextArea\n          label=\"Descrição do cargo: \"\n          name=\"descricao\"\n          maxLength=\"500\"\n          onChange={ this.handleChange }\n          value={ descricao }\n          required\n        />\n        <Button\n          label=\"enviar\"\n          onClick={ this.handleSubmit }\n        />\n      </fieldset>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispach) => ({\n  setUserCurriculo: (curriculo) => dispach(setCurriculo(curriculo)),\n  setUserCargo: (cargo) => dispach(setCargo(cargo)),\n  setUserDescricao: (descricao) => dispach(setDescricao(descricao)),\n});\n\nPersonalForm.propTypes = {\n  setUserCurriculo: PropTypes.func.isRequired,\n  setUserCargo: PropTypes.func.isRequired,\n  setUserDescricao: PropTypes.func.isRequired,\n  history: PropTypes.objectOf.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(ProfessionalForm);\n"]},"metadata":{},"sourceType":"module"}