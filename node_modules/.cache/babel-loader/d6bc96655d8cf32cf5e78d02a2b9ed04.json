{"ast":null,"code":"var _jsxFileName = \"/home/leonardo/Documentos/redux teste/exercise-forms-redux/src/pages/PersonalForm.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\nimport Select from '../components/Select';\nimport { userCPF, userEmail, userEndereco, userCidade, userEstado, userName } from '../redux/actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PersonalForm extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = () => {\n      const {\n        nome,\n        email,\n        cpf,\n        endereco,\n        cidade,\n        estado\n      } = this.state;\n      const {\n        history,\n        setUserName,\n        setUserEmail,\n        setUserCpf,\n        setUserCidade,\n        setUserEndereco,\n        setUserEstado\n      } = this.props;\n      setUserName(nome);\n      setUserEmail(email);\n      setUserCpf(cpf);\n      setUserEndereco(endereco);\n      setUserCidade(cidade);\n      setUserEstado(estado);\n      history.push('/professionalform');\n    };\n\n    this.state = {\n      nome: '',\n      email: '',\n      cpf: '',\n      endereco: '',\n      cidade: '',\n      estado: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const {\n      nome,\n      email,\n      cpf,\n      endereco,\n      cidade,\n      estado\n    } = this.state;\n    const states = ['Rio de Janeiro', 'Minas Gerais', 'Amapá', 'Amazonas', 'São Paulo', 'Ceará', 'Distrito Federal'];\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"nome: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: nome,\n        name: \"nome\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"email: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: email,\n        name: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"cpf: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: cpf,\n        name: \"cpf\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"endereco: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: endereco,\n        name: \"endereco\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"cidade: \",\n        type: \"text\",\n        onChange: this.handleChange,\n        name: \"cidade\",\n        value: cidade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        defaultOption: \"Selecione\",\n        onChange: this.handleChange,\n        value: estado,\n        label: \"Estado: \",\n        id: \"estado\",\n        name: \"estado\",\n        options: states\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        label: \"Enviar\",\n        onClick: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispach => ({\n  setUserName: nome => dispach(userName(nome)),\n  setUserEmail: email => dispach(userEmail(email)),\n  setUserCpf: cpf => dispach(userCPF(cpf)),\n  setUserEndereco: endereco => dispach(userEndereco(endereco)),\n  setUserCidade: cidade => dispach(userCidade(cidade)),\n  setUserEstado: estado => dispach(userEstado(estado))\n});\n\nPersonalForm.propTypes = {\n  setUserName: PropTypes.func.isRequired,\n  setUserEmail: PropTypes.func.isRequired,\n  setUserCpf: PropTypes.func.isRequired,\n  setUserEndereco: PropTypes.func.isRequired,\n  setUserEstado: PropTypes.func.isRequired,\n  setUserCidade: PropTypes.func.isRequired,\n  history: PropTypes.o\n};\nexport default connect(null, mapDispatchToProps)(PersonalForm);","map":{"version":3,"sources":["/home/leonardo/Documentos/redux teste/exercise-forms-redux/src/pages/PersonalForm.jsx"],"names":["React","Component","connect","PropTypes","Input","Button","Select","userCPF","userEmail","userEndereco","userCidade","userEstado","userName","PersonalForm","constructor","handleSubmit","nome","email","cpf","endereco","cidade","estado","state","history","setUserName","setUserEmail","setUserCpf","setUserCidade","setUserEndereco","setUserEstado","props","push","handleChange","bind","target","name","value","setState","render","states","mapDispatchToProps","dispach","propTypes","func","isRequired","o"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SACEC,OADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,UAJF,EAKEC,UALF,EAMEC,QANF,QAMkB,8BANlB;;;AAQA,MAAMC,YAAN,SAA2BZ,SAA3B,CAAqC;AACnCa,EAAAA,WAAW,GAAG;AACZ;;AADY,SAoBdC,YApBc,GAoBC,MAAM;AACnB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA,GAAf;AAAoBC,QAAAA,QAApB;AAA8BC,QAAAA,MAA9B;AAAsCC,QAAAA;AAAtC,UAAiD,KAAKC,KAA5D;AACA,YAAM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,WAAX;AAAwBC,QAAAA,YAAxB;AAAsCC,QAAAA,UAAtC;AAAkDC,QAAAA,aAAlD;AACJC,QAAAA,eADI;AACaC,QAAAA;AADb,UAC+B,KAAKC,KAD1C;AAGAN,MAAAA,WAAW,CAACR,IAAD,CAAX;AACAS,MAAAA,YAAY,CAACR,KAAD,CAAZ;AACAS,MAAAA,UAAU,CAACR,GAAD,CAAV;AACAU,MAAAA,eAAe,CAACT,QAAD,CAAf;AACAQ,MAAAA,aAAa,CAACP,MAAD,CAAb;AACAS,MAAAA,aAAa,CAACR,MAAD,CAAb;AAEAE,MAAAA,OAAO,CAACQ,IAAR,CAAa,mBAAb;AACD,KAjCa;;AAGZ,SAAKT,KAAL,GAAa;AACXN,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,GAAG,EAAE,EAHM;AAIXC,MAAAA,QAAQ,EAAE,EAJC;AAKXC,MAAAA,MAAM,EAAE,EALG;AAMXC,MAAAA,MAAM,EAAE;AANG,KAAb;AASA,SAAKW,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAAC;AAAEE,IAAAA;AAAF,GAAD,EAAa;AACvB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,MAAxB;AACA,SAAKG,QAAL,CAAc;AAAE,OAACF,IAAD,GAAQC;AAAV,KAAd;AACD;;AAiBDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEtB,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,GAAf;AAAoBC,MAAAA,QAApB;AAA8BC,MAAAA,MAA9B;AAAsCC,MAAAA;AAAtC,QAAiD,KAAKC,KAA5D;AACA,UAAMiB,MAAM,GAAG,CACb,gBADa,EAEb,cAFa,EAGb,OAHa,EAGJ,UAHI,EAGQ,WAHR,EAGqB,OAHrB,EAG8B,kBAH9B,CAAf;AAIA,wBACE;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,QADR;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,QAAQ,EAAG,KAAKP,YAHlB;AAIE,QAAA,KAAK,EAAGhB,IAJV;AAKE,QAAA,IAAI,EAAC,MALP;AAME,QAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,QAAQ,EAAG,KAAKgB,YAHlB;AAIE,QAAA,KAAK,EAAGf,KAJV;AAKE,QAAA,IAAI,EAAC,OALP;AAME,QAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,cATF,eAiBE,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,QAAQ,EAAG,KAAKe,YAHlB;AAIE,QAAA,KAAK,EAAGd,GAJV;AAKE,QAAA,IAAI,EAAC,KALP;AAME,QAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,cAjBF,eAyBE,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,YADR;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,QAAQ,EAAG,KAAKc,YAHlB;AAIE,QAAA,KAAK,EAAGb,QAJV;AAKE,QAAA,IAAI,EAAC,UALP;AAME,QAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,cAzBF,eAiCE,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,UADR;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,QAAQ,EAAG,KAAKa,YAHlB;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,KAAK,EAAGZ;AALV;AAAA;AAAA;AAAA;AAAA,cAjCF,eAwCE,QAAC,MAAD;AACE,QAAA,aAAa,EAAC,WADhB;AAEE,QAAA,QAAQ,EAAG,KAAKY,YAFlB;AAGE,QAAA,KAAK,EAAGX,MAHV;AAIE,QAAA,KAAK,EAAC,UAJR;AAKE,QAAA,EAAE,EAAC,QALL;AAME,QAAA,IAAI,EAAC,QANP;AAOE,QAAA,OAAO,EAAGkB;AAPZ;AAAA;AAAA;AAAA;AAAA,cAxCF,eAiDE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAC,QAFR;AAGE,QAAA,OAAO,EAAG,KAAKxB;AAHjB;AAAA;AAAA;AAAA;AAAA,cAjDF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyDD;;AAnGkC;;AAsGrC,MAAMyB,kBAAkB,GAAIC,OAAD,KAAc;AACvCjB,EAAAA,WAAW,EAAGR,IAAD,IAAUyB,OAAO,CAAC7B,QAAQ,CAACI,IAAD,CAAT,CADS;AAEvCS,EAAAA,YAAY,EAAGR,KAAD,IAAWwB,OAAO,CAACjC,SAAS,CAACS,KAAD,CAAV,CAFO;AAGvCS,EAAAA,UAAU,EAAGR,GAAD,IAASuB,OAAO,CAAClC,OAAO,CAACW,GAAD,CAAR,CAHW;AAIvCU,EAAAA,eAAe,EAAGT,QAAD,IAAcsB,OAAO,CAAChC,YAAY,CAACU,QAAD,CAAb,CAJC;AAKvCQ,EAAAA,aAAa,EAAGP,MAAD,IAAYqB,OAAO,CAAC/B,UAAU,CAACU,MAAD,CAAX,CALK;AAMvCS,EAAAA,aAAa,EAAGR,MAAD,IAAYoB,OAAO,CAAC9B,UAAU,CAACU,MAAD,CAAX;AANK,CAAd,CAA3B;;AASAR,YAAY,CAAC6B,SAAb,GAAyB;AACvBlB,EAAAA,WAAW,EAAErB,SAAS,CAACwC,IAAV,CAAeC,UADL;AAEvBnB,EAAAA,YAAY,EAAEtB,SAAS,CAACwC,IAAV,CAAeC,UAFN;AAGvBlB,EAAAA,UAAU,EAAEvB,SAAS,CAACwC,IAAV,CAAeC,UAHJ;AAIvBhB,EAAAA,eAAe,EAAEzB,SAAS,CAACwC,IAAV,CAAeC,UAJT;AAKvBf,EAAAA,aAAa,EAAE1B,SAAS,CAACwC,IAAV,CAAeC,UALP;AAMvBjB,EAAAA,aAAa,EAAExB,SAAS,CAACwC,IAAV,CAAeC,UANP;AAOvBrB,EAAAA,OAAO,EAAEpB,SAAS,CAAC0C;AAPI,CAAzB;AAUA,eAAe3C,OAAO,CAAC,IAAD,EAAOsC,kBAAP,CAAP,CAAkC3B,YAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\nimport Select from '../components/Select';\nimport {\n  userCPF,\n  userEmail,\n  userEndereco,\n  userCidade,\n  userEstado,\n  userName } from '../redux/actions/userActions';\n\nclass PersonalForm extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      nome: '',\n      email: '',\n      cpf: '',\n      endereco: '',\n      cidade: '',\n      estado: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit = () => {\n    const { nome, email, cpf, endereco, cidade, estado } = this.state;\n    const { history, setUserName, setUserEmail, setUserCpf, setUserCidade,\n      setUserEndereco, setUserEstado } = this.props;\n\n    setUserName(nome);\n    setUserEmail(email);\n    setUserCpf(cpf);\n    setUserEndereco(endereco);\n    setUserCidade(cidade);\n    setUserEstado(estado);\n\n    history.push('/professionalform');\n  }\n\n  render() {\n    const { nome, email, cpf, endereco, cidade, estado } = this.state;\n    const states = [\n      'Rio de Janeiro',\n      'Minas Gerais',\n      'Amapá', 'Amazonas', 'São Paulo', 'Ceará', 'Distrito Federal'];\n    return (\n      <fieldset>\n        <Input\n          label=\"nome: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          value={ nome }\n          name=\"nome\"\n          required\n        />\n        <Input\n          label=\"email: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          value={ email }\n          name=\"email\"\n          required\n        />\n        <Input\n          label=\"cpf: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          value={ cpf }\n          name=\"cpf\"\n          required\n        />\n        <Input\n          label=\"endereco: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          value={ endereco }\n          name=\"endereco\"\n          required\n        />\n        <Input\n          label=\"cidade: \"\n          type=\"text\"\n          onChange={ this.handleChange }\n          name=\"cidade\"\n          value={ cidade }\n        />\n        <Select\n          defaultOption=\"Selecione\"\n          onChange={ this.handleChange }\n          value={ estado }\n          label=\"Estado: \"\n          id=\"estado\"\n          name=\"estado\"\n          options={ states }\n        />\n        <Button\n          type=\"button\"\n          label=\"Enviar\"\n          onClick={ this.handleSubmit }\n        />\n      </fieldset>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispach) => ({\n  setUserName: (nome) => dispach(userName(nome)),\n  setUserEmail: (email) => dispach(userEmail(email)),\n  setUserCpf: (cpf) => dispach(userCPF(cpf)),\n  setUserEndereco: (endereco) => dispach(userEndereco(endereco)),\n  setUserCidade: (cidade) => dispach(userCidade(cidade)),\n  setUserEstado: (estado) => dispach(userEstado(estado)),\n});\n\nPersonalForm.propTypes = {\n  setUserName: PropTypes.func.isRequired,\n  setUserEmail: PropTypes.func.isRequired,\n  setUserCpf: PropTypes.func.isRequired,\n  setUserEndereco: PropTypes.func.isRequired,\n  setUserEstado: PropTypes.func.isRequired,\n  setUserCidade: PropTypes.func.isRequired,\n  history: PropTypes.o\n};\n\nexport default connect(null, mapDispatchToProps)(PersonalForm);\n"]},"metadata":{},"sourceType":"module"}